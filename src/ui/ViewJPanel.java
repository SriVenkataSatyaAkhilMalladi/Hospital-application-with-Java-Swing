/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import name.employ;

//import name.employ;
import name.employlist;

/**
 *
 * @author srivenkatasatyaakhilmalladi
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    //employ employee;
    employlist employeelist;
    public ViewJPanel(employlist employeelist) {
        initComponents();
        this.employeelist = employeelist;
        
        displaytable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbemployees = new javax.swing.JTable();
        btDelete = new javax.swing.JButton();
        btView = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblemployeeid = new javax.swing.JLabel();
        txtEmployeeid = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        lblTeamInfo = new javax.swing.JLabel();
        lblCellNo = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtCellNo = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtLevel = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtTeamInfo = new javax.swing.JTextField();
        lblPositionTitle = new javax.swing.JLabel();
        txtPositionTitle = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        btUpdate = new javax.swing.JButton();

        jTitle.setText("View Employee Details");

        tbemployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team INFO", "Position Title", "Cell No", "Email"
            }
        ));
        jScrollPane1.setViewportView(tbemployees);

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btView.setText("View");
        btView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btViewActionPerformed(evt);
            }
        });

        lblName.setText("Name");

        lblemployeeid.setText("Employee ID");

        lblAge.setText("Age");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblStartDate.setText("Start Date");

        lblTeamInfo.setText("Team Info");

        lblCellNo.setText("Cell No");

        lblEmail.setText("Email ID");

        lblLevel.setText("Level");

        lblGender.setText("Gender");

        txtCellNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCellNoActionPerformed(evt);
            }
        });

        lblPositionTitle.setText("Position Title");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lblSearch.setText("Search:");

        btUpdate.setText("Update");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btView)
                .addGap(160, 160, 160)
                .addComponent(btUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btDelete)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTeamInfo)
                        .addGap(18, 18, 18)
                        .addComponent(txtTeamInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblemployeeid)
                                    .addComponent(lblName)
                                    .addComponent(lblAge))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                    .addComponent(txtEmployeeid)
                                    .addComponent(txtAge)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStartDate)
                                .addGap(18, 18, 18)
                                .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCellNo)
                                .addGap(18, 18, 18)
                                .addComponent(txtCellNo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblGender)
                                .addGap(18, 18, 18)
                                .addComponent(txtGender))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblLevel)
                                    .addComponent(lblEmail))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmail)
                                    .addComponent(txtLevel)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPositionTitle)))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(lblSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTitle)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btDelete)
                    .addComponent(btView)
                    .addComponent(btUpdate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender)
                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblemployeeid)
                    .addComponent(txtEmployeeid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCellNo)
                    .addComponent(txtCellNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate)
                    .addComponent(lblLevel)
                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeamInfo)
                    .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPositionTitle)
                    .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btViewActionPerformed
        // TODO add your handling code here:
        int SelectedRowIndex = tbemployees.getSelectedRow();
        
        if (SelectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a employ to view their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tbemployees.getModel();
        employ selectedemployee = (employ) model.getValueAt(SelectedRowIndex, 0);
        
       // txtName.setName(selectedemployee.getName());
        txtName.setText(selectedemployee.getName());
        txtEmail.setText(selectedemployee.getEmail_id());
        txtGender.setText(selectedemployee.getGender());        
        txtPositionTitle.setText(selectedemployee.getPos_title());
        txtTeamInfo.setText(selectedemployee.getTeam_into());
        txtStartDate.setText(selectedemployee.getStart_date());
        txtAge.setText(String.valueOf(selectedemployee.getAge()));
        txtCellNo.setText(String.valueOf(selectedemployee.getCell_no()));
        txtLevel.setText(String.valueOf(selectedemployee.getLevel()));
        txtEmployeeid.setText(String.valueOf(selectedemployee.getEmployeeid()));
        //txtEmployeeid.setText(String.valueOf((char) selectedemployee.getEmployeeid()));
        //txtEmail.setEmail(selectedemployee.getEmail_id());
        //txtAge.setAge(String.valueOf(selectedemployee.getAge()));
        
    }//GEN-LAST:event_btViewActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
        int SelectedRowIndex = tbemployees.getSelectedRow();
        
        if (SelectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a employ to delete their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tbemployees.getModel();
        employ selectedemployee = (employ) model.getValueAt(SelectedRowIndex, 0);
        
        employeelist.deleteemployee(SelectedRowIndex);
        JOptionPane.showMessageDialog(this, "Employee details havebeen deleted");
        
        displaytable();
        
    }//GEN-LAST:event_btDeleteActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtCellNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCellNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCellNoActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbemployees.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tbemployees.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
     
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbemployees.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tbemployees.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
        
    }//GEN-LAST:event_txtSearchKeyPressed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbemployees.getModel();
        switch (tbemployees.getSelectedRowCount()) {
            case 0:
                JOptionPane.showMessageDialog(this, "Either row unseleted or table is empty.");
                break;
            case 1:
                employ selectedemployee = (employ) model.getValueAt(tbemployees.getSelectedRow(), 0);
                String name = txtName.getText();
                int employeeid = Integer.parseInt(txtEmployeeid.getText());
                int age = Integer.parseInt(txtAge.getText());
                String gender = txtGender.getText();
                String start_date = txtStartDate.getText();
                int level = Integer.parseInt(txtLevel.getText());
                String team_into = txtTeamInfo.getText();
                String pos_title = txtPositionTitle.getText();
                String email_id = txtEmail.getText();
                long cell_no = (int)Long.parseLong(txtCellNo.getText());
                model.setValueAt(name, tbemployees.getSelectedRow(), 0);
                model.setValueAt(employeeid, tbemployees.getSelectedRow(), 1);
                model.setValueAt(age, tbemployees.getSelectedRow(), 2);
                model.setValueAt(gender, tbemployees.getSelectedRow(), 3);
                model.setValueAt(start_date, tbemployees.getSelectedRow(), 4);
                model.setValueAt(level, tbemployees.getSelectedRow(), 5);
                model.setValueAt(team_into, tbemployees.getSelectedRow(), 6);
                model.setValueAt(pos_title, tbemployees.getSelectedRow(), 7);
                model.setValueAt(email_id, tbemployees.getSelectedRow(), 8);
                model.setValueAt(cell_no, tbemployees.getSelectedRow(), 9);
                JOptionPane.showMessageDialog(this, "Employee details Updated");
                break;
           // default:
             //   JOptionPane.showMessageDialog(this, "Select a row Update");
               // break;
        }
        
        
        
    }//GEN-LAST:event_btUpdateActionPerformed

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btUpdate;
    private javax.swing.JButton btView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jTitle;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellNo;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPositionTitle;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JLabel lblemployeeid;
    private javax.swing.JTable tbemployees;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellNo;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeid;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables

    private void displaytable() {
        DefaultTableModel model = (DefaultTableModel) tbemployees.getModel();
        model.setRowCount(0);
        
        for (employ em : employeelist.getEmployeelist()){ 
            Object[] row = new Object[10];
            //row[0] = em.getName();
            row[0] = em;
            row[1] = em.getEmployeeid();
            row[2] = em.getAge();
            row[3] = em.getGender();
            row[4] = em.getStart_date();
            row[5] = em.getLevel();
            row[6] = em.getTeam_into();
            row[7] = em.getPos_title();
            row[8] = em.getCell_no();
            row[9] = em.getEmail_id();
            
            model.addRow(row);
            
        }
        
    //    txtName.setText(employeelist.getName());
    //   txtEmail.setText(employeelist.getEmail_id());
    //    txtGender.setText(employeelist.getGender());
    //    txtPositionTitle.setText(employeelist.getPos_title());
    //    txtTeamInfo.setText(employee.getTeam_into());
    //   txtStartDate.setText(employee.getStart_date());
    //    txtAge.setText(Integer.toString(employee.getAge()));
    //    txtCellNo.setText(Long.toString(employee.getCell_no()));
    //    txtLevel.setText(Integer.toString(employee.getLevel()));
    //    txtEmployeeid.setText(Integer.toString(employee.getEmployeeid()));
 
        
    }
}
